[General Settings]
enable_logging = Yes

[Logging Settings]
log_to_file = Yes
log_to_console = Yes
file_name = logging/flower_server.log
file_mode = w
encoding = utf-8
level = INFO
format = %%(asctime)s.%%(msecs)03d %%(levelname)s: %%(message)s
date_format = %%Y/%%m/%%d %%H:%%M:%%S

[FL Settings]
num_rounds = 10
round_timeout_in_seconds = 1000
accept_rounds_containing_failures = Yes
enable_ssl = No
enable_hyper_parameters_dynamic_adjustment = Yes
server_aggregation_strategy = FedAvg
fraction_fit = 1.0
fraction_evaluate = 1.0
min_fit_clients = 1
min_evaluate_clients = 1
min_available_clients = 1

[SSL Settings]
ca_certificate_file = ssl_certificates/ca_certificate.crt
server_certificate_file = ssl_certificates/server_certificate.pem
server_rsa_private_key_file = ssl_certificates/server_rsa_private.key

[gRPC Settings]
grpc_listen_ip_address = 0.0.0.0
grpc_listen_port = 8080
grpc_max_message_length_in_bytes = 536870912

[FedAvgM Settings]
server_learning_rate = 1.0
server_momentum = 0.0

[Training Hyper-parameters Settings]
shuffle = True
batch_size = 32
initial_epoch = 0
epochs = 1
steps_per_epoch = None
validation_split = 0.1
validation_batch_size = None

[Testing Hyper-parameters Settings]
batch_size = 32
steps = None

[Hyper-parameters Dynamic Adjustment Settings]
initial_round_candidate_for_adjustments = 3
dynamically_adjust_training_hyper_parameters = Yes
dynamically_adjust_testing_hyper_parameters = No
adjustments_eligibility_controller = MonetDB

[Adjustments Policies Settings]
boolean_policy_1 = Flip
numerical_policy_1 = Increment by 1
numerical_policy_2 = Decrement by 1
numerical_policy_3 = Multiply by 2
numerical_policy_4 = Divide by 0.75

[Training Hyper-parameters Dynamic Adjustment Settings]
to_adjust = {batch_size: numerical_policy_3, epochs: numerical_policy_1}

[Testing Hyper-parameters Dynamic Adjustment Settings]
to_adjust = None

[MonetDB Settings]
hostname = localhost
port = 50000
username = monetdb
password = monetdb
database = dataflow_analyzer
accuracy_goal = 0.3
limit_accuracy_change = 0.05
limit_training_time = 2
check_if_last_round_is_already_recorded = SELECT accuracy FROM oserverevaluationaggregation WHERE server_round = {} - 1;
training_adjustments_eligibility_query = SELECT update_hyperparameters (%(accuracy_goal)s, %(limit_training_time)s, %(limit_accuracy_change)s, {});
testing_adjustments_eligibility_query = SELECT 0;